#ifndef __BSP__W25QX_H
#define __BSP__W25QX_H
/***********************************************************************************************************************************
 ** 【文件名称】  bsp_w25qxx.h
 ** 【编写人员】  魔女开发板团队
 ** 【更新分享】  Q群文件夹        
 ** 【淘    宝】  魔女开发板      https://demoboard.taobao.com
 ***********************************************************************************************************************************
 ** 【功能描述】  定义引脚、定义全局结构体、声明全局函数
 **
 ** 【适用平台】  STM32F103 + 标准库v3.5 + keil5
 **     
 ** 【硬件重点】  1- 电源引脚，并联一个100nF到GND, 不然容易通信失败；
 **               2- CS引脚，并联一个10K电阻到3.3V，可减少通信错误；
 **
 ** 【代码重点】  1- SPI通信
 **               2- W25Q256的地址, 与32,64,128等不同 
 ** 　　　　　　　3- 为简化整个W25Q128的代码，已封装成3个全局函数，只用这3个函数，即可完成对其存取操作
 **                  初始化  ：  vW25qx_Init()　
 **                  读取数据：  vW25qxx_ReadBuffer( u32 addr, u8 *p, u16 num)　 // 数据地址，缓存指针，字节数
 **                  写入数据：  vW25qxx_WriteBuffer(u32 addr, u8 *p, u16 num)   // 数据地址，缓存指针，字节数    
 **   
 ** 【移植说明】  引脚修改：在本文件w25qxx.h中修改
 **               SPI修改 ：在h文件中和c文件的init()中需分别修改
 **              
 ** 【字库使用】  特别地注意，请慎重使用芯片擦除，魔女开发板的w25q128，在存储区尾部已烧录宋体4种字号大小汉字GBK字模数据
 **               字库存放地址：0x00A00000 - 0x01000000   尽量不要写操作此区域地址    
 **               具体的读取操作，可参考c文件中函数   
 ** 
 ** 【更新记录】  2019-05-11  创建
 **               2019-12-03  大幅修改write功能, 使其更简单清晰；理解重点：明确擦扇和写页的区别, 写页指令最大缓存字节数. 
 **               2020-08-15  完善代码注释，文件格式 
 **               2020-12-15  增加GBK字库读取函数，完善文件结构
 **               2020-12-30  增加宏定义：STARTUPTIMES_RESET，用于控制清零测试时的启动记录
 **
***********************************************************************************************************************************/
#include <stm32f10x.h>  
#include <stdio.h>



/*****************************************************************************
 ** 引脚定义
 ** 移植时，如果使用SPI1,只需要修改这个区域
****************************************************************************/
#define   W25QXX_SPI           SPI1          // SPIx

#define   W25QXX_NSS_GPIO      GPIOC         // NSS
#define   W25QXX_NSS_PIN       GPIO_Pin_13

#define   W25QXX_CLK_GPIO      GPIOA         // CLK
#define   W25QXX_CLK_PIN       GPIO_Pin_5

#define   W25QXX_MISO_GPIO     GPIOA         // MISO
#define   W25QXX_MISO_PIN      GPIO_Pin_6

#define   W25QXX_MOSI_GPIO     GPIOA         // MOSI
#define   W25QXX_MOSI_PIN      GPIO_Pin_7          

#define   GBK_STORAGE_ADDR     0x00A00000    // GBK字库起始地址,魔女开发板的W25Q128已保存宋体12、16、24、32号字体



/*****************************************************************************
 ** 声明全局变量
****************************************************************************/
typedef struct 
{
    u8   FlagInit;                 // 初始化状态   0:失败, 1:成功
    char type[20];                 // 型号
    u16  StartupTimes;             // 记录启动次数
    u8   FlagGBKStorage;           // GBK字库标志; 0=没有, 1=可用; 作用: 用于判断地址段的写保护, 防止字库被错误写履盖; 并可作LCD的中文输出判断
}xW25QXX_TypeDef;
extern xW25QXX_TypeDef  xW25Qxx;   // 声明全局结构体, 用于记录w25qxx信息

#define STARTUPTIMES_RESET   1     // 用于重置启动次数记录。置1时，启动次数归零


 
/*****************************************************************************
 ** 声明全局函数
****************************************************************************/
// 注意：为简化及统一代码，已封闭成4个对外函数，可完成对其所有存取操作
void W25qx_Init(void);                                    // 初始化
void W25qxx_ReadBuffer ( u32 addr, u8 *p, u16 num);       // 读数据：addr-地址，*p-读取后数据缓存，num-要读取的字节数
void W25qxx_WriteBuffer( u32 addr, u8 *p, u16 num);       // 写数据：addr-地址，*p-待写的数据缓存，num-要写入的字节数
void W25qxx_ReadGBK(u8* typeface, u8 size, u8* dataBuf);  // 从w25qxx的字库中读取出字模数据    



#endif


